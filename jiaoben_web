#coding=utf-8
import re
import os
import xlwt
import xlrd
from xlutils.copy import copy


def ZuiJia(web_html,web_xls):
    """
    处理导出的html
    """
    htmltxt = open(web_html, 'r', encoding='UTF-8')
    htmlpage = htmltxt.read()
    # 正则整改建议
    a_4 = '<tr class="odd">.*?<th>解决办法</th>.*?<td>'
    b_4 = '</td>'
    method = re.compile(a_4 + '(.*?)' + b_4, re.S | re.M)
    res_method = method.findall(htmlpage)
    # 正则漏洞描述
    a_5 = '<tr class="even">.*?<th>详细描述</th>.*?<td>'
    b_5 = '</td>'
    describe = re.compile(a_5 + '(.*?)' + b_5, re.S | re.M)
    res_describe = describe.findall(htmlpage)

    """
    处理导出的xls
    """
    workbook = xlrd.open_workbook(web_xls)
    # 根据sheet索引或者名称获取sheet内容
    sheet = workbook.sheet_by_name('漏洞列表')
    nrows = sheet.nrows
    cols_2 = sheet.col_values(2)  # 获取危险程度
    cols_3 = sheet.col_values(3)  # 获取漏洞名称
    cols_4 = sheet.col_values(4)  # 获取影响站点

    """
    进行追加
    """

    wb_zj = xlrd.open_workbook(res_name[0] +"漏洞确认表.xls",formatting_info=True)
    wb_zj_sheet = wb_zj.sheet_by_name('总表')
    wb_zj_sheet_nrows = wb_zj_sheet.nrows   #目前主机漏洞表，总表的行数
    wb_zj_copy = copy(wb_zj)
    wb_zj_copy_sheet0 = wb_zj_copy.get_sheet(0)
    a = wb_zj_copy.add_sheet(row_j[8], cell_overwrite_ok=True)#添加一个新的sheet--开发处室，然后进行
    row_0 = wb_zj_copy_sheet0.row_values(0) #获取第一行的表头
    #将表头写入web的sheet中
    for res in range(25):
        a.write(0, res, row_0[res])
    """
    本部分主要是输出漏洞危险程度。
    --------------------------------------------------
    """
    i = 1
    while (i < nrows):
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 0, wb_zj_sheet_nrows + i) #序号
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 1, res_name[0])  # 系统名称
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 5, "web漏洞")  # 漏洞类别
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows+1, 4, cols_2[i])
        a.write(i, 0, i)  #web的sheet的序号
        a.write(i, 1, res_name[0])  #web的sheet的系统名称
        a.write(i, 5, "web漏洞") #web的sheet的漏洞类别
        a.write(i, 4, cols_2[i]) #web的sheet的危险程度

        i += 1
    """
    本部分主要是输出漏洞名称。
    --------------------------------------------------
    """
    i = 1
    while (i < nrows):
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows+1, 3, cols_3[i])
        a.write(i, 3, cols_3[i])
        i += 1
    """
    本部分主要是输出漏洞影响站点。
    --------------------------------------------------
    """
    i = 1
    while (i < nrows):
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows+1, 7, cols_4[i])
        a.write(i, 7, cols_4[i])
        i += 1
    """
    本部分主要是输出漏洞整改建议。
    --------------------------------------------------
    """
    i = 1
    for res in res_method:
        wb_zj_sheet_nrows += 1
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows, 10, res)
        a.write(i, 10, res)
        i += 1
    """
    本部分主要是输出漏洞描述。
    --------------------------------------------------
    """
    i = 1
    for res in res_describe:
        wb_zj_sheet_nrows += 1
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows, 6, res)
        a.write(i, 6, res)
        i += 1
    """
    本部分主要是输出整改处室。
    --------------------------------------------------
    """
    i = 1
    while (i < nrows):
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 11, row_j[8])
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 12, row_j[9])
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 13, row_j[5])
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 14, row_j[6])
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 15, row_j[8])
        wb_zj_copy_sheet0.write(wb_zj_sheet_nrows + 1, 16, row_j[9])
        i += 1
    wb_zj_copy.save(res_name[0]+"漏洞确认表.xls")
